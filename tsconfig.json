{
  "compilerOptions": {
    "outDir": "./dist/",
    // Підсвічує всі місця, де тип не вказано
    // Однак це не означає, що ви більше не можете використовувати any.
    // Це лише означає, що в такій ситуації розробник повинен явно написати any,
    "noImplicitAny": true,
    "module": "ESNext",
    // Яку специфікацію компілювати: для підтримки більшості браузерів
    "target": "es5",
    "jsx": "react-jsx",
    // Компілятор буде обробляти не тільки TS-файли, але і JS-файли
    "allowJs": true,
    "moduleResolution": "node",
    "strict": true,
    // Для абсолютного імпорта
    "baseUrl": ".",
    "paths": {
      "*": ["./src/*"]
    },
    // esModuleInterop дозволяє працювати з пакетами, які використовують
    // common js як зі звичайними пакетами за допомогою import (require() module.export) = common js
    // import Moment from 'moment';
    // без прапора esModuleInterop результат undefined
    // console.log(Moment);
    // c прапором результат [object Object]
    // console.log(Moment);
    "esModuleInterop": true,
//     Якщо будь-яка бібліотека не має default import,лоадери такі як ts-loader або babel-loader, автоматично
//      створюють їх
//     замість такого імпорту
//     import * as React from 'react';
//     можна писати такий
//     import React from 'react';
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
  "include": [
    "./config/jest/jest-setup.ts",
    "./src/**/*.ts",
    "./src/**/*.tsx"
  ]
}
